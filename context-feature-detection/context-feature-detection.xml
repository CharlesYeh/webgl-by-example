<div id="context-feature-detection-live-sample" height="120">
<h3 id="WebGL_context_feature_detection">WebGL context feature detection</h3>
<p>This example demonstrates testing for WebGL support in the browser. The test is run when the user presses the button.</p>
<pre class="brush: html">
&lt;p&gt;[ Here would go the result of WebGL feature detection ]&lt;/p&gt;
&lt;button&gt;Press here to detect WebGLRenderingContext&lt;/button&gt;
</pre>
<pre class="brush: css">
body {
  text-align : center;
}
button {
  display : block;
  margin : auto;
  padding : 0.6em;
}
</pre>
<pre class="brush: js" id="livesample-js">
/* Run everything inside window load event handler, to make sure DOM
 * is fully loaded and styled before trying to manipulate it.*/
window.addEventListener("load", function() {
  var paragraph = document.querySelector("p"),
    button = document.querySelector("button");
  /* Adding click event handler to button. */
  button.addEventListener("click", detectWebGLContext, false);
  function detectWebGLContext () {
    /* Create canvas element. The canvas is not added to the
     * document itself, so it is never displayed in the browser
     * window. */
    var canvas = document.createElement("canvas");
    /* Get WebGLRenderingContext from canvas element. */
    var gl = canvas.getContext("webgl")
      || canvas.getContext("experimental-webgl");
    /* Report the result. */
    if (gl &amp;&amp; gl instanceof WebGLRenderingContext) {
      paragraph.innerHTML =
        "Congratulations! Your browser supports WebGL.";
    } else {
      paragraph.innerHTML = "Failed to get WebGL context. "
        + "Your browser or device may not support WebGL.";
    }
  }
}, false);
</pre>
</div>
<p>When running this example we get</p>
{{EmbedLiveSample("context-feature-detection-live-sample",660,120)}}
<p>You can further explore this example on Thimble.</p>
